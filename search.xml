<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[涂格子1]]></title>
    <url>%2F2019%2F04%2F06%2F%E6%B6%82%E6%A0%BC%E5%AD%901%2F</url>
    <content type="text"><![CDATA[问题描述n个格子，每次随机涂一个，求涂满m个格子的期望次数。 输入格式一行两个整数，分别表示n和m，其中1≤n≤24,0≤m＜n。 输出格式输出期望次数。 样例输入4 2 样例输出2.333333 solution涂一个格子的概率为1，期望为1次涂二个格子的概率为(n - 1)/n,期望是他的倒数以此类推…第i个格子的期望是n / (n - i) code1234567891011#include&lt;bits/stdc++.h&gt;using namespace std;int n , m; int main() &#123; cin &gt;&gt; n &gt;&gt; m; double ans = 0.0; for(int i = 1 ; i &lt;= m ; i ++) ans += (n * 1.0) / ((n - i + 1) * 1.0); printf(&quot;%.6lf\n&quot;,ans); return 0;&#125;]]></content>
      <tags>
        <tag>动态规划,dp</tag>
        <tag>概率dp</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[分块2（模板）]]></title>
    <url>%2F2019%2F04%2F06%2F%E5%88%86%E5%9D%972%EF%BC%88%E6%A8%A1%E6%9D%BF%EF%BC%89%2F</url>
    <content type="text"><![CDATA[区间修改，查询区间&lt;=x的数的个数0 &lt;= n , m &lt;= 5e412345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273#include&lt;bits/stdc++.h&gt;#pragma GCC optimize(3)using namespace std;const int N = 5e5 + 5;struct node&#123;int id , w;&#125; a[N];int n , m , add[N] , bel[N];inline int read() &#123; int s = 0 , w = 1; char ch = getchar(); while(ch &lt; 48 || ch &gt; 57) &#123;if(ch == &apos;-&apos;) w = -1; ch = getchar();&#125; while(ch &gt;= 48 &amp;&amp; ch &lt;= 57) s = (s &lt;&lt; 1) + (s &lt;&lt; 3) + (ch ^ 48) , ch = getchar(); return s * w;&#125;bool cmp1(node A , node B) &#123;return A.w &lt; B.w;&#125;bool cmp2(node A , node B) &#123;return A.id &lt; B.id;&#125;void update(int l , int r , int val) &#123; for(int i = bel[l] + 1 ; i &lt; bel[r] ; i ++) add[i] += val; int L = (bel[l] - 1) * m + 1 , R = min(bel[l] * m , r); sort(a + L , a + min(bel[l] * m , n) + 1 , cmp2); for(int i = l ; i &lt;= R ; i ++) a[i].w += val; sort(a + L , a + min(bel[l] * m , n) + 1 , cmp1); if(bel[l] != bel[r]) &#123; L = (bel[r] - 1) * m + 1 , R = min(bel[r] * m , n); sort(a + L , a + R + 1 , cmp2); for(int i = L ; i &lt;= r ; i ++) a[i].w += val; sort(a + L , a + R + 1 , cmp1); &#125; &#125;int query(int l , int r , long long c) &#123; int ans = 0; for(int i = bel[l] + 1 ; i &lt; bel[r] ; i ++) &#123; int l = (i - 1) * m + 1 , r = i * m ; int res = -1; while(l &lt;= r) &#123; int mid = (l + r) &gt;&gt; 1; if(a[mid].w + add[i] &lt; c) res = mid , l = mid + 1; else r = mid - 1; &#125; if(res != -1) ans += res - (i - 1) * m ; &#125; int L = (bel[l] - 1) * m + 1 , R = min(bel[l] * m , r); sort(a + L , a + min(bel[l] * m , n) + 1 , cmp2); for(int i = l ; i &lt;= R ; i ++) if(add[bel[l]] + a[i].w &lt; c) ans ++; sort(a + L , a + min(bel[l] * m , n) + 1 , cmp1); if(bel[l] != bel[r]) &#123; L = (bel[r] - 1) * m + 1 , R = min(bel[r] * m , n); sort(a + L , a + R + 1 , cmp2); for(int i = L ; i &lt;= r ; i ++) if(add[bel[r]] + a[i].w &lt; c) ans ++; sort(a + L , a + R + 1 , cmp1); &#125; return ans;&#125;int main() &#123; n = read(); m = n / (int)(sqrt(n &lt;&lt; 1)); for(int i = 1 ; i &lt;= n ; i ++) &#123; a[i].w = read(); a[i].id = i; bel[i] = (i - 1) / m + 1; &#125; for(int i = 1 ; i &lt;= bel[n] ; i ++) sort(a + (i - 1) * m + 1 , a + min(i * m , n) + 1 , cmp1); int T = n; while(T --) &#123; int opt = read() , l = read() , r = read() , c = read(); if(opt == 0) update(l , r , c); else printf(&quot;%d\n&quot;,query(l , r , (long long)c * (long long)c)); &#125; return 0;&#125;]]></content>
      <tags>
        <tag>模板库</tag>
        <tag>分块</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[分块1（模板）]]></title>
    <url>%2F2019%2F04%2F06%2F%E5%88%86%E5%9D%971%EF%BC%88%E6%A8%A1%E6%9D%BF%EF%BC%89%2F</url>
    <content type="text"><![CDATA[分块：区间修改，单点查询1234567891011121314151617181920212223242526272829303132333435#include&lt;bits/stdc++.h&gt;using namespace std;const int N = 5e4 + 5;int n , m , a[N] , bel[N] , add[N];int read() &#123; int s = 0 , w = 1; char ch = getchar(); while(ch &lt; 48 || ch &gt; 57) &#123;if(ch == &apos;-&apos;) w = -1; ch = getchar();&#125; while(ch &gt;= 48 &amp;&amp; ch &lt;= 57) s = (s &lt;&lt; 1) + (s &lt;&lt; 3) +(ch ^ 48) , ch = getchar(); return s * w;&#125;void update(int l , int r , int val) &#123; for(int i = bel[l] + 1 ; i &lt; bel[r] ; i ++) add[i] += val; for(int i = l ; i &lt;= min(bel[l] * m, r) ; i ++) a[i] += val; if(bel[l] != bel[r]) for(int i = (bel[r] - 1) * m + 1 ; i &lt;= r ; i ++) a[i] += val;&#125;int query(int x) &#123;return add[bel[x]] + a[x];&#125; int main() &#123; n = read(); for(int i = 1; i &lt;= n ; i ++) a[i] = read(); m = (int)sqrt(n); for(int i = 1; i &lt;= n ; i ++ ) bel[i] = (i - 1) / m + 1; int T = n; while(T --) &#123; int opt = read() , x = read() , y = read() , w = read(); if(opt == 0) update(x , y , w); else printf(&quot;%d\n&quot;,query(y)); &#125; return 0;&#125;]]></content>
      <tags>
        <tag>模板库</tag>
        <tag>分块</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[带修莫队（模板）]]></title>
    <url>%2F2019%2F04%2F06%2F%E5%B8%A6%E4%BF%AE%E8%8E%AB%E9%98%9F%EF%BC%88%E6%A8%A1%E6%9D%BF%EF%BC%89%2F</url>
    <content type="text"><![CDATA[输入密码，查看文章 Incorrect Password! No content to display! ]]></content>
      <tags>
        <tag>模板库</tag>
        <tag>莫队</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[普通莫队（模板）]]></title>
    <url>%2F2019%2F04%2F06%2F%E6%99%AE%E9%80%9A%E8%8E%AB%E9%98%9F%EF%BC%88%E6%A8%A1%E6%9D%BF%EF%BC%89%2F</url>
    <content type="text"><![CDATA[普通莫队区间查询颜色个数123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051#include&lt;bits/stdc++.h&gt;using namespace std;const int N = 5e4 + 5;struct node&#123;int l , r , belong , id;&#125;a[N];int n , m , T , c[N] , cnt[N] , ans = 0 , out[N];int read() &#123; int s = 0 , w = 1; char ch = getchar(); while(ch &lt; 48 || ch &gt; 57) &#123;if(ch == &apos;-&apos;) w = -1; ch = getchar();&#125; while(ch &gt;= 48 &amp;&amp; ch &lt;= 57) s = (s &lt;&lt; 1) + (s &lt;&lt; 3) + (ch ^ 48) , ch = getchar(); return s * w;&#125;bool cmp(node A , node B) &#123; if(A.belong == B.belong) return A.r &lt; B.r; return A.l &lt; B.l;&#125;void add(int x) &#123; if(!cnt[c[x]]) ans ++; cnt[c[x]] ++;&#125;void remove(int x) &#123; cnt[c[x]] --; if(!cnt[c[x]]) ans --;&#125;int main() &#123; n = read() , T = read(); m = (int)sqrt(T); for(int i = 1 ; i &lt;= n ; i ++) c[i] = read(); for(int i = 1 ; i &lt;= T ; i ++) &#123; a[i].l =read() , a[i].r = read() ; a[i].belong = (a[i].l - 1) / m + 1; a[i].id = i; &#125; sort(a + 1 , a + T + 1 , cmp); int L = 1 , R = 0; for(int i = 1 ; i &lt;= T ; i ++) &#123; while(L &lt; a[i].l) remove(L ++); while(L &gt; a[i].l) add(-- L); while(R &gt; a[i].r) remove(R --); while(R &lt; a[i].r) add(++ R); out[a[i].id] = ans; &#125; for(int i = 1 ; i &lt;= T ; i ++) printf(&quot;%d\n&quot;,out[i]); putchar(&apos;\n&apos;); return 0;&#125;]]></content>
      <tags>
        <tag>模板库</tag>
        <tag>莫队</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Dairy 20190405]]></title>
    <url>%2F2019%2F04%2F05%2F20190405%2F</url>
    <content type="text"><![CDATA[输入密码，查看文章 Incorrect Password! No content to display! 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]]></content>
      <tags>
        <tag>Diary</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[麻球繁衍]]></title>
    <url>%2F2019%2F04%2F05%2F%E9%BA%BB%E7%90%83%E7%B9%81%E8%A1%8D%2F</url>
    <content type="text"><![CDATA[问题描述你有一坨K个麻球.这些麻球每天都会挂，挂之前繁衍n个麻球.繁衍i个的概率为p[i] i ∈ N={0,1,2…n-1}; 输入格式输入包含多组数据。输入文件的第1行是一个正整数N，表示数据组数。每组数据的第1行有3个正整数n(1&lt;=n&lt;=1000),k(0&lt;=k&lt;=1000),m(0&lt;=m&lt;=1000)。接下来有n行，给出P_0,P_1,…,P_n-1。 输出格式对于第i组数据，输出”Case #i: “，后面是第m天后所有毛球均已死亡的概率。 输出提示如果你的输出与标准答案相差不超过10^-5，那么你的答案就被认为是正确的。 样例输入12345678910111213141516171843 1 10.330.340.333 1 20.330.340.333 1 20.50.00.54 2 20.50.00.0 0.5 样例输出1234Case #1: 0.3300000Case #2: 0.4781370Case #3: 0.6250000Case #4: 0.3164063 solution因为每个麻球是独立的，没有任何区别，所以用f[i]表示1个麻球第i天或第i天之前死光的概率f[i] = sigma{p[j] * f[i - 1]^j }(0 &lt;= j &lt; n);j表示麻球繁衍了j个麻球yesturday全部go die根据乘法原理可得这种情况的概率为f[i - 1]^j code12345678910111213141516171819202122232425262728293031#include&lt;bits/stdc++.h&gt;using namespace std;const int N = 1005;int T , n , m , K;double p[N] , f[N];double qpow(double x , int y) &#123; double res = x , ans = 1; while(y) &#123; if(y &amp; 1) ans *= res; y &gt;&gt;= 1; res *= res; &#125; return ans;&#125; int main() &#123; cin &gt;&gt; T; for(int Case = 1 ; Case &lt;= T ; Case ++) &#123; scanf(&quot;%d%d%d&quot;,&amp;n,&amp;K,&amp;m); for(int i = 0 ; i &lt; n ; i ++) scanf(&quot;%lf&quot;,&amp;p[i]); memset(f , 0 , sizeof(f)); f[1] = p[0]; for(int i = 2 ; i &lt;= m ; i ++) for(int j = 0 ; j &lt; n ; j ++) f[i] += qpow(f[i - 1] , j) * p[j]; printf(&quot;Case #%d: %.7lf\n&quot;,Case,qpow(f[m] , K)); &#125; return 0;&#125;]]></content>
      <tags>
        <tag>动态规划,dp</tag>
        <tag>概率/期望dp</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[NOI2001 炮兵阵地]]></title>
    <url>%2F2019%2F04%2F04%2F%E7%82%AE%E5%85%B5%E9%98%B5%E5%9C%B0%2F</url>
    <content type="text"><![CDATA[题目描述司令部的将军们打算在NM的网格地图上部署他们的炮兵部队。一个NM的地图由N行M列组成，地图的每一格可能是山地（用“H” 表示），也可能是平原（用“P”表示），如下图。在每一格平原地形上最多可以布置一支炮兵部队（山地上不能够部署炮兵部队）；一支炮兵部队在地图上的攻击范围如图中黑色区域所示： 如果在地图中的灰色所标识的平原上部署一支炮兵部队，则图中的黑色的网格表示它能够攻击到的区域：沿横向左右各两格，沿纵向上下各两格。图上其它白色网格均攻击不到。从图上可见炮兵的攻击范围不受地形的影响。 现在，将军们规划如何部署炮兵部队，在防止误伤的前提下（保证任何两支炮兵部队之间不能互相攻击，即任何一支炮兵部队都不在其他支炮兵部队的攻击范围内），在整个地图区域内最多能够摆放多少我军的炮兵部队。 输入格式：第一行包含两个由空格分割开的正整数，分别表示N和M； 接下来的N行，每一行含有连续的M个字符（‘P’或者‘H’），中间没有空格。按顺序表示地图中每一行的数据。N≤100；M≤10。 输出格式：仅一行，包含一个整数K，表示最多能摆放的炮兵部队的数量。 输入样例1234565 4PHPPPPHHPPPPPHPPPHHP 输出样例16 Solution显然的状压dp用f[i][j][k]表示第i行，第i行的状态为j，i-1行的状态为k，最多放几个这道题调了我1个小时，但不知为什么改了几个玄学的东西才过这个故事告诉我们类似于 !a1 &amp;&amp; !a2 &amp;&amp; … !an 应该写成 !(a1 || a2 || .. || an)因为我就是改了这个过的 code1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950#include&lt;bits/stdc++.h&gt;using namespace std;const int N = 105;int n , m , tot = 0 , cnt[1024] , state[1024] , f[N][500][500] , a[N];string s;int Sum(int x) &#123; int c = 0; while(x) c += x &amp; 1 , x &gt;&gt;= 1; return c;&#125;void init() &#123; int tmp = (1 &lt;&lt; m) - 1; for(int i = 0 ; i &lt;= tmp ; i ++) if(!(i &amp; (i &lt;&lt; 1) || i &amp; (i &lt;&lt; 2) || i &amp; (i &gt;&gt; 1) || i &amp; (i &gt;&gt; 2))) state[++ tot] = i; for(int i = 1 ; i &lt;= tot ; i ++) cnt[i] = Sum(state[i]); for(int i = 1 ; i &lt;= tot ; i ++) if(!(a[1] &amp; state[i])) f[1][i][0] = cnt[i]; for(int i = 1 ; i &lt;= tot ; i ++) for(int j = 1 ; j &lt;= tot ; j ++) if(!(state[i] &amp; a[2] || state[j] &amp; a[1] || state[i] &amp; state[j])) f[2][i][j] = max(f[2][i][j] , f[1][j][0] + cnt[i]);&#125;int main() &#123; cin &gt;&gt; n &gt;&gt; m; for(int i = 1 ; i &lt;= n ; i ++) &#123; cin &gt;&gt; s; for(int j = 0 ; j &lt; m ; j ++) a[i] += (1 &lt;&lt; (m - j - 1)) * (s[j] == &apos;P&apos; ? 0 : 1); &#125; init(); for(int i = 3 ; i &lt;= n ; i ++) for(int j = 1 ; j &lt;= tot ; j ++) // 当前行state if(!(a[i] &amp; state[j])) for(int k = 1 ; k &lt;= tot ; k ++) // 前一行的state if(!((a[i - 1] &amp; state[k]) || (state[j] &amp; state[k]))) for(int l = 1 ; l &lt;= tot ; l ++) // 前两行的state if(!((a[i - 2] &amp; state[l]) || (state[k] &amp; state[l]) || (state[j] &amp; state[l]))) f[i][j][k] = max(f[i][j][k] , f[i - 1][k][l] + cnt[j]); int ans = 0; for(int i = 1 ; i &lt;= tot ; i ++) for(int j = 1 ; j &lt;= tot ; j ++) if(f[n][i][j] &gt; ans) ans = f[n][i][j]; cout &lt;&lt; ans &lt;&lt; endl; return 0;&#125;]]></content>
      <tags>
        <tag>动态规划,dp</tag>
        <tag>状压dp</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Dairy 20190404]]></title>
    <url>%2F2019%2F04%2F04%2F20190404%2F</url>
    <content type="text"><![CDATA[输入密码，查看文章 Incorrect Password! No content to display! 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]]></content>
      <tags>
        <tag>Diary</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[NOIP2016 Day2T3 愤怒的小鸟]]></title>
    <url>%2F2019%2F04%2F04%2F%E6%84%A4%E6%80%92%E7%9A%84%E5%B0%8F%E9%B8%9F%2F</url>
    <content type="text"><![CDATA[思路看到题目n=18，首先想到的是dfs或状压dp。dfs太烦了，不想打，那就dp吧。题目中抛物线y=ax^2+bx,所以两点确定一条抛物线。所以，我们把每条抛物线都枚举出来，再处理每条抛物线经过哪些点。状态定义 f[i][j] 表示 前i条抛物线，经过点的状态为j，取了几条抛物线状态转移 f[i][j | state[i]] = min(f[i][j | state[i]] , f[i][j] + 1);我们发现，f[i]总是与f[i - 1]有关，于是，可以把第一位滚动掉（although不这样做也可以AC）此时f[j | state[i]] = min(f[j | state[i]] , f[j] + 1);时间复杂度O(T 2^n (n^2) / 2) code1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162#include&lt;bits/stdc++.h&gt;using namespace std;const int N = 20 , M = 262145 , INF = 1e8 ;const double eps = 1e-8;int T , n , m , tot , f[M] , num[N * N];double x[N] , y[N];int read() &#123; int s = 0 ,w = 1; char ch = getchar(); while(ch &lt; 48 || ch &gt; 57) &#123;if(ch == &apos;-&apos;) w = -1; ch = getchar();&#125; while(ch &gt;= 48 &amp;&amp; ch &lt;= 57) s = (s &lt;&lt; 1) + (s &lt;&lt; 3) + (ch ^ 48) , ch = getchar(); return s * w;&#125;void calc(double &amp;a , double &amp;b , int i , int j) &#123; a = (x[i] * y[j] - x[j] * y[i]) / (x[i] * x[j] * (x[j] - x[i])); b = (y[i] - a * x[i] * x[i]) / x[i];&#125;void init() &#123; double a , b; for(int i = 1 ; i &lt;= n ; i ++) num[++tot] = 1 &lt;&lt; (i - 1); for(int i = 1 ; i &lt;= n ; i ++) for(int j = 1 ; j &lt; i ; j ++) &#123; num[++ tot] = 0; calc(a , b , i , j); if(a &gt;= 0) continue; for(int k = 1 ; k &lt;= n ; k ++) if(k == i || k == j || (abs(x[k] * x[k] * a + x[k] * b - y[k]) &lt; eps)) num[tot] += (1 &lt;&lt; (k - 1)); &#125; &#125; int dp() &#123; int stage = (1 &lt;&lt; n) - 1; memset(f , -1 , sizeof(f)); f[0] = 0; for(int i = 1 ; i &lt;= tot ; i ++) for(int j = stage ; j &gt;= 0 ; j --) if(f[j] != -1) &#123; int v = j | num[i]; if(f[v] == -1 || f[v] &gt; f[j] + 1) f[v] = f[j] + 1; &#125; return f[stage];&#125;int main() &#123;// freopen(&quot;angrybirds.in&quot;,&quot;r&quot;,stdin);// freopen(&quot;angrybirds.out&quot;,&quot;w&quot;,stdout); T = read(); while(T --) &#123; tot = 0; n = read() , m = read(); for(int i = 1 ; i &lt;= n ; i ++) scanf(&quot;%lf%lf&quot;,&amp;x[i],&amp;y[i]); init(); printf(&quot;%d\n&quot;,dp()); &#125; return 0;&#125;// a = (x1y2 - x2y1) / x1x2(x2 - x1)// b = (y1 - a * x1^2) / x1]]></content>
      <tags>
        <tag>动态规划,dp</tag>
        <tag>状压dp</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HAOI2010软件安装]]></title>
    <url>%2F2019%2F04%2F04%2FHAOI2010-%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[思路很简单: Tarjan + 树形背包code:123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687#include&lt;bits/stdc++.h&gt;using namespace std;#define random(a , b) rand() % (b - a + 1) + aconst int N = 1009;int n , m , w[N] , c[N];int read() &#123; int s = 0 , w = 1; char ch = getchar(); while(ch &lt; 48 || ch &gt; 57)&#123; if(ch == &apos;-&apos;) w = -1 ; ch = getchar();&#125; while(ch &gt;= 48 &amp;&amp; ch &lt;= 57) s = (s &lt;&lt; 1) + (s &lt;&lt; 3) + (ch ^ 48) , ch = getchar(); return s * w;&#125; struct Edge&#123;int to , nxt;&#125; e[N &lt;&lt; 1];int head[N] , tot = 0 , par[N];void addedge(int x , int y) &#123;e[++tot].to = y , e[tot].nxt = head[x] , head[x] = tot;&#125;bool ins[N];int stk[N] , dfn[N] , low[N] , bel[N] , sw[N] , sc[N];int ind = 0 , top = 0 , col;void Tarjan(int u) &#123; dfn[u] = low[u] = ++ ind; stk[++ top] = u; ins[u] = 1; for(int i = head[u] ; i != -1; i = e[i].nxt) &#123; int v = e[i].to; if(!dfn[v]) &#123; Tarjan(v); low[u] = min(low[u] , low[v]); &#125; else if(ins[v]) low[u] = min(low[u] , dfn[v]); &#125; int k; if(low[u] == dfn[u]) &#123; ++col; do &#123; k = stk[top --]; sw[col] += w[k]; sc[col] += c[k]; ins[k] = 0; bel[k] = col; &#125; while(k != u); &#125;&#125;int f[N][1009];// w是体积 , c是价值 void dfs(int u , int par) &#123; for(int i = sw[u] ; i &lt;= m ; i ++) f[u][i] = sc[u]; for(int i = head[u] ; i != -1; i = e[i].nxt) if(e[i].to != par) &#123; int v = e[i].to; dfs(v , u); for(int j = m - sw[u] ; j &gt;= 0 ; j --) for(int k = 0 ; k &lt;= j ; k ++) f[u][sw[u] + j] = max(f[u][sw[u] + j] , f[u][sw[u] + j - k] + f[v][k]); &#125;&#125;int du[N];int main() &#123; srand(time(NULL)); memset(head , -1 , sizeof(head)); n = read() , m = read(); for(int i = 1 ; i &lt;= n ; i ++) w[i] = read(); for(int i = 1 ; i &lt;= n ; i ++) c[i] = read(); for(int i = 1 ; i &lt;= n ; i ++) &#123; par[i] = read(); addedge(par[i] , i); &#125; col = n; for(int i = 1 ; i &lt;= n ; i ++) if(!dfn[i]) Tarjan(i); for(int i = 1 ; i &lt;= n ; i ++) for(int j = head[i] ; j != -1; j = e[j].nxt) if(bel[e[j].to] != bel[i]) addedge(bel[i] , bel[e[j].to]) , du[bel[e[j].to]] ++; for(int i = n + 1 ; i &lt;= col ; i ++) if(!du[i]) addedge(col + 1 , i) ; dfs(col + 1 , -1); cout &lt;&lt; f[col + 1][m] &lt;&lt; endl; return 0;&#125;]]></content>
      <tags>
        <tag>动态规划,dp</tag>
        <tag>树形dp</tag>
        <tag>Tarjan,缩点</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[八下化学]]></title>
    <url>%2F2019%2F03%2F31%2F%E5%85%AB%E4%B8%8B%E5%8C%96%E5%AD%A6%2F</url>
    <content type="text"><![CDATA[输入密码，查看文章 Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>文化课</category>
      </categories>
      <tags>
        <tag>文化课</tag>
        <tag>化学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[BZOJ 3090 podjela]]></title>
    <url>%2F2019%2F03%2F30%2FBZOJ-3090-podjela%2F</url>
    <content type="text"><![CDATA[问题描述有 N 个农民, 他们住在 N 个不同的村子里. 这 N 个村子形成一棵树.每个农民初始时获得 X 的钱.每一次操作, 一个农民可以从它自己的钱中, 取出任意数量的钱, 交给某个相邻村子的农民.对于每个农民给定一个值 v_i, 求 最少需要多少次操作, 使得每个农民最终拿到的钱 &gt;= 给定的值v_i. 输入格式第1行: 一个整数 N (1 &lt;= N &lt;= 2000)第2行: 一个整数 X (0 &lt;= X &lt;= 10000)第3行: N 个整数, 表示 v_i. 保证所有 v_i 的和 &lt;= N * X第4..N+2行: 每行两个 1..N 的数, 表示树上的一条边. 边是双向的. 输出格式第1行: 一个整数, 最少需要的操作次数 样例输入61510 20 18 16 6 161 44 54 66 25 3 样例输出5 Code1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253#include&lt;bits/stdc++.h&gt;using namespace std;const long long N = 2009 , INF = 36028797018963968;long long n , m , a[N] , size[N] , f[N][N] , g[N];struct Edge&#123;long long to , nxt;&#125; e[N &lt;&lt; 1];long long head[N] , tot = 0;void addedge(long long x , long long y) &#123;e[++tot].to = y , e[tot].nxt = head[x] , head[x] = tot;&#125;long long read() &#123; long long s = 0 ,w = 1; char ch = getchar(); while(ch &lt; 48 || ch &gt; 57) &#123;if(ch == &apos;-&apos;) w = -1; ch = getchar();&#125; while(ch &gt;= 48 &amp;&amp; ch &lt;= 57) s = (s &lt;&lt; 1) + (s &lt;&lt; 3) + (ch ^ 48) , ch = getchar(); return s * w;&#125;void dfs(long long u , long long par) &#123; size[u] = 1; f[u][0] = f[u][1] = m - a[u]; for(int i = head[u] ; i ; i = e[i].nxt) if(e[i].to != par) &#123; long long v = e[i].to; dfs(v , u); for(int j = 0 ; j &lt; size[u] ; j ++ ) g[j] = f[u][j]; for(int j = 0 ; j &lt; size[u] + size[v] ; j ++ ) f[u][j] = - INF; for(int v1 = 0 ; v1 &lt; size[u] ; v1 ++) for(int v2 = 0 ; v2 &lt; size[v] ; v2 ++) &#123; if(f[v][v2] &gt;= 0) f[u][v1 + v2] = max(f[u][v1 + v2] , g[v1]); f[u][v1 + v2 + 1] = max(f[u][v1 + v2 + 1] , f[v][v2] + g[v1]); &#125; size[u] += size[v]; &#125;&#125;int main() &#123; n = read() , m = read(); for(int i = 1 ; i &lt;= n ; i ++) a[i] = read(); for(int i = 1 ; i &lt; n ; i ++) &#123; int x = read() , y = read(); addedge(x , y) ; addedge(y , x); &#125; dfs(1 , 0); for(int i = 0 ; i &lt; n ; i ++) if(f[1][i] &gt;= 0) &#123; printf(&quot;%lld\n&quot;,i); return 0; &#125; return 0;&#125;]]></content>
      <categories>
        <category>动态规划</category>
      </categories>
      <tags>
        <tag>动态规划,dp</tag>
        <tag>树形dp</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[基础位运算]]></title>
    <url>%2F2019%2F03%2F30%2F%E5%9F%BA%E7%A1%80%E4%BD%8D%E8%BF%90%E7%AE%97%2F</url>
    <content type="text"><![CDATA[操作:1、去掉最后一位 例如：101101-&gt;101102、在最后加一个0 例如：101101-&gt;10110103、在最后面加一个1 例如：101101-&gt;10110114、把最后一位变成0 例如：101101-&gt;1011005、把最后一位变成1 例如：101100-&gt;1011016、最后一位取反 例如：101101-&gt;1011007、把右数第k位变成1 例如：101001-&gt;101101,k=38、把右数第k位变成0 例如：101101-&gt;101001,k=39、右数第k位取反 例如：101001-&gt;101101,k=310、取末三位 例如：1101101-&gt;10111、取末k位 例如：1101101-&gt;1101,k=412、取右数第k位 例如：1101101-&gt;1,k=413、把末尾k位变成1 例如：101001-&gt;101111,k=414、末k位取反 例如：101001-&gt;100110,k=415、把右边连续的1变成0 例如：100101111-&gt;10010000016、把右边起第一个0变成1 例如：100101111-&gt;10011111117、把右边起连续的0变成1 例如：110011000-&gt;11001111118、取右边连续的1 例如：100101111-&gt;111119、去掉右边起第一个1的左边 例如：100101000-&gt;1000 Code12345678910111213141516171819202122232425262728293031323334353637#include&lt;bits/stdc++.h&gt;using namespace std;inline int read() &#123; int s = 0 ,w = 1; char ch = getchar(); while(ch &lt; 48 || ch &gt; 57) &#123;if(ch == &apos;-&apos;) w = -1 ; ch = getchar();&#125; while(ch &gt;= 48 &amp;&amp; ch &lt;= 57) s = (s &lt;&lt; 1) + (s &lt;&lt; 3) + (ch ^ 48) , ch = getchar(); return s * w;&#125;int T;int main() &#123; T = read(); while(T --) &#123; int opt = read() , x = read() , k; if(opt == 1) printf(&quot;%d\n&quot; , x &gt;&gt; 1); if(opt == 2) printf(&quot;%d\n&quot; , x &lt;&lt; 1); if(opt == 3) printf(&quot;%d\n&quot; , x &lt;&lt; 1 | 1); if(opt == 4) printf(&quot;%d\n&quot; , x - (x &amp; 1) ); if(opt == 5) printf(&quot;%d\n&quot; , x | 1); if(opt == 6) printf(&quot;%d\n&quot; , x ^ 1); if(opt == 7) &#123;k = read() ; printf(&quot;%d\n&quot; , x | (1 &lt;&lt; (k - 1)));&#125; if(opt == 8) &#123;k = read() ; printf(&quot;%d\n&quot; , x &amp; (~(1 &lt;&lt; (k - 1))) );&#125; if(opt == 9) &#123;k = read() ; printf(&quot;%d\n&quot; , x ^ (1 &lt;&lt; (k - 1)) );&#125; if(opt == 10) printf(&quot;%d\n&quot; , x &amp; 7); if(opt == 11) &#123;k = read() ; printf(&quot;%d\n&quot; , x &amp; ((1 &lt;&lt; k) - 1) ); if(opt == 12) &#123;k = read() ; printf(&quot;%d\n&quot; , (x &gt;&gt; (k - 1)) &amp; 1 ); &#125; if(opt == 13) &#123;k = read() ; printf(&quot;%d\n&quot; , x | ((1 &lt;&lt; k) - 1));&#125; if(opt == 14) &#123;k = read() ; printf(&quot;%d\n&quot; , x ^ ((1 &lt;&lt; k) - 1));&#125; if(opt == 15) printf(&quot;%d\n&quot; , x &amp; (x + 1)); if(opt == 16) printf(&quot;%d\n&quot; , x | (x + 1)); if(opt == 17) printf(&quot;%d\n&quot; , x | (x - 1)); if(opt == 18) printf(&quot;%d\n&quot; , (x ^ (x + 1)) &gt;&gt; 1); if(opt == 19) printf(&quot;%d\n&quot; , x &amp; -x); &#125; return 0;&#125;]]></content>
      <categories>
        <category>技巧与优化</category>
      </categories>
      <tags>
        <tag>位运算</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[How to write a blog]]></title>
    <url>%2F2019%2F03%2F30%2Fmy-first-blog%2F</url>
    <content type="text"><![CDATA[怎么写blog？？？ First of all执行 cd到你的bloghexo new ‘my-first-blog’ 然后会在post文件夹生成md文件 然后打开就可以写blog了 Next格式为title: postName 文章页面上的显示名称date: 2013-12-02 15:30:16文章生成时间，当然可以任意修改categories: 默认分类 #分类tags: tag1 tag2 tag3文章标签，可空，多标签请用格式，注意:后面有个空格description: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面password: 密码message: 输入密码，查看文章以下是正文 Finally输入指令：hexo clean(可以不用) hexo g hexo d 还有一点本博客搭建参考材料firstsecondthird]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
</search>
