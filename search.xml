<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Dairy 20190405]]></title>
    <url>%2F2019%2F04%2F05%2F20190405%2F</url>
    <content type="text"><![CDATA[输入密码，查看文章 Incorrect Password! No content to display! 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]]></content>
      <tags>
        <tag>Diary</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[麻球繁衍]]></title>
    <url>%2F2019%2F04%2F05%2F%E9%BA%BB%E7%90%83%E7%B9%81%E8%A1%8D%2F</url>
    <content type="text"><![CDATA[问题描述你有一坨K个麻球.这些麻球每天都会挂，挂之前繁衍n个麻球.繁衍i个的概率为p[i] 0 &lt;= i &lt; n; 输入格式输入包含多组数据。输入文件的第1行是一个正整数N，表示数据组数。每组数据的第1行有3个正整数n(1&lt;=n&lt;=1000),k(0&lt;=k&lt;=1000),m(0&lt;=m&lt;=1000)。接下来有n行，给出P_0,P_1,…,P_n-1。 输出格式对于第i组数据，输出”Case #i: “，后面是第m天后所有毛球均已死亡的概率。 输出提示如果你的输出与标准答案相差不超过10^-5，那么你的答案就被认为是正确的。 样例输入12345678910111213141516171843 1 10.330.340.333 1 20.330.340.333 1 20.50.00.54 2 20.50.00.0 0.5 样例输出1234Case #1: 0.3300000Case #2: 0.4781370Case #3: 0.6250000Case #4: 0.3164063 solution因为每个麻球是独立的，没有任何区别，所以用f[i]表示1个麻球第i天或第i天之前死光的概率f[i] = sigma{p[j] * f[i - 1]^j }(0 &lt;= j &lt; n);j表示麻球繁衍了j个麻球yesturday全部go die根据乘法原理可得这种情况的概率为f[i - 1]^j code12345678910111213141516171819202122232425262728293031#include&lt;bits/stdc++.h&gt;using namespace std;const int N = 1005;int T , n , m , K;double p[N] , f[N];double qpow(double x , int y) &#123; double res = x , ans = 1; while(y) &#123; if(y &amp; 1) ans *= res; y &gt;&gt;= 1; res *= res; &#125; return ans;&#125; int main() &#123; cin &gt;&gt; T; for(int Case = 1 ; Case &lt;= T ; Case ++) &#123; scanf(&quot;%d%d%d&quot;,&amp;n,&amp;K,&amp;m); for(int i = 0 ; i &lt; n ; i ++) scanf(&quot;%lf&quot;,&amp;p[i]); memset(f , 0 , sizeof(f)); f[1] = p[0]; for(int i = 2 ; i &lt;= m ; i ++) for(int j = 0 ; j &lt; n ; j ++) f[i] += qpow(f[i - 1] , j) * p[j]; printf(&quot;Case #%d: %.7lf\n&quot;,Case,qpow(f[m] , K)); &#125; return 0;&#125;]]></content>
      <tags>
        <tag>动态规划,dp</tag>
        <tag>概率/期望dp</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[NOI2001 炮兵阵地]]></title>
    <url>%2F2019%2F04%2F04%2F%E7%82%AE%E5%85%B5%E9%98%B5%E5%9C%B0%2F</url>
    <content type="text"><![CDATA[题目描述司令部的将军们打算在NM的网格地图上部署他们的炮兵部队。一个NM的地图由N行M列组成，地图的每一格可能是山地（用“H” 表示），也可能是平原（用“P”表示），如下图。在每一格平原地形上最多可以布置一支炮兵部队（山地上不能够部署炮兵部队）；一支炮兵部队在地图上的攻击范围如图中黑色区域所示： 如果在地图中的灰色所标识的平原上部署一支炮兵部队，则图中的黑色的网格表示它能够攻击到的区域：沿横向左右各两格，沿纵向上下各两格。图上其它白色网格均攻击不到。从图上可见炮兵的攻击范围不受地形的影响。 现在，将军们规划如何部署炮兵部队，在防止误伤的前提下（保证任何两支炮兵部队之间不能互相攻击，即任何一支炮兵部队都不在其他支炮兵部队的攻击范围内），在整个地图区域内最多能够摆放多少我军的炮兵部队。 输入格式：第一行包含两个由空格分割开的正整数，分别表示N和M； 接下来的N行，每一行含有连续的M个字符（‘P’或者‘H’），中间没有空格。按顺序表示地图中每一行的数据。N≤100；M≤10。 输出格式：仅一行，包含一个整数K，表示最多能摆放的炮兵部队的数量。 输入样例1234565 4PHPPPPHHPPPPPHPPPHHP 输出样例16 Solution显然的状压dp用f[i][j][k]表示第i行，第i行的状态为j，i-1行的状态为k，最多放几个这道题调了我1个小时，但不知为什么改了几个玄学的东西才过这个故事告诉我们类似于 !a1 &amp;&amp; !a2 &amp;&amp; … !an 应该写成 !(a1 || a2 || .. || an)因为我就是改了这个过的 code1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950#include&lt;bits/stdc++.h&gt;using namespace std;const int N = 105;int n , m , tot = 0 , cnt[1024] , state[1024] , f[N][500][500] , a[N];string s;int Sum(int x) &#123; int c = 0; while(x) c += x &amp; 1 , x &gt;&gt;= 1; return c;&#125;void init() &#123; int tmp = (1 &lt;&lt; m) - 1; for(int i = 0 ; i &lt;= tmp ; i ++) if(!(i &amp; (i &lt;&lt; 1) || i &amp; (i &lt;&lt; 2) || i &amp; (i &gt;&gt; 1) || i &amp; (i &gt;&gt; 2))) state[++ tot] = i; for(int i = 1 ; i &lt;= tot ; i ++) cnt[i] = Sum(state[i]); for(int i = 1 ; i &lt;= tot ; i ++) if(!(a[1] &amp; state[i])) f[1][i][0] = cnt[i]; for(int i = 1 ; i &lt;= tot ; i ++) for(int j = 1 ; j &lt;= tot ; j ++) if(!(state[i] &amp; a[2] || state[j] &amp; a[1] || state[i] &amp; state[j])) f[2][i][j] = max(f[2][i][j] , f[1][j][0] + cnt[i]);&#125;int main() &#123; cin &gt;&gt; n &gt;&gt; m; for(int i = 1 ; i &lt;= n ; i ++) &#123; cin &gt;&gt; s; for(int j = 0 ; j &lt; m ; j ++) a[i] += (1 &lt;&lt; (m - j - 1)) * (s[j] == &apos;P&apos; ? 0 : 1); &#125; init(); for(int i = 3 ; i &lt;= n ; i ++) for(int j = 1 ; j &lt;= tot ; j ++) // 当前行state if(!(a[i] &amp; state[j])) for(int k = 1 ; k &lt;= tot ; k ++) // 前一行的state if(!((a[i - 1] &amp; state[k]) || (state[j] &amp; state[k]))) for(int l = 1 ; l &lt;= tot ; l ++) // 前两行的state if(!((a[i - 2] &amp; state[l]) || (state[k] &amp; state[l]) || (state[j] &amp; state[l]))) f[i][j][k] = max(f[i][j][k] , f[i - 1][k][l] + cnt[j]); int ans = 0; for(int i = 1 ; i &lt;= tot ; i ++) for(int j = 1 ; j &lt;= tot ; j ++) if(f[n][i][j] &gt; ans) ans = f[n][i][j]; cout &lt;&lt; ans &lt;&lt; endl; return 0;&#125;]]></content>
      <tags>
        <tag>动态规划,dp</tag>
        <tag>状压dp</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Dairy 20190404]]></title>
    <url>%2F2019%2F04%2F04%2F20190404%2F</url>
    <content type="text"><![CDATA[输入密码，查看文章 Incorrect Password! No content to display! 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]]></content>
      <tags>
        <tag>Diary</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[NOIP2016 Day2T3 愤怒的小鸟]]></title>
    <url>%2F2019%2F04%2F04%2F%E6%84%A4%E6%80%92%E7%9A%84%E5%B0%8F%E9%B8%9F%2F</url>
    <content type="text"><![CDATA[思路看到题目n=18，首先想到的是dfs或状压dp。dfs太烦了，不想打，那就dp吧。题目中抛物线y=ax^2+bx,所以两点确定一条抛物线。所以，我们把每条抛物线都枚举出来，再处理每条抛物线经过哪些点。状态定义 f[i][j] 表示 前i条抛物线，经过点的状态为j，取了几条抛物线状态转移 f[i][j | state[i]] = min(f[i][j | state[i]] , f[i][j] + 1);我们发现，f[i]总是与f[i - 1]有关，于是，可以把第一位滚动掉（although不这样做也可以AC）此时f[j | state[i]] = min(f[j | state[i]] , f[j] + 1);时间复杂度O(T 2^n (n^2) / 2) code1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162#include&lt;bits/stdc++.h&gt;using namespace std;const int N = 20 , M = 262145 , INF = 1e8 ;const double eps = 1e-8;int T , n , m , tot , f[M] , num[N * N];double x[N] , y[N];int read() &#123; int s = 0 ,w = 1; char ch = getchar(); while(ch &lt; 48 || ch &gt; 57) &#123;if(ch == &apos;-&apos;) w = -1; ch = getchar();&#125; while(ch &gt;= 48 &amp;&amp; ch &lt;= 57) s = (s &lt;&lt; 1) + (s &lt;&lt; 3) + (ch ^ 48) , ch = getchar(); return s * w;&#125;void calc(double &amp;a , double &amp;b , int i , int j) &#123; a = (x[i] * y[j] - x[j] * y[i]) / (x[i] * x[j] * (x[j] - x[i])); b = (y[i] - a * x[i] * x[i]) / x[i];&#125;void init() &#123; double a , b; for(int i = 1 ; i &lt;= n ; i ++) num[++tot] = 1 &lt;&lt; (i - 1); for(int i = 1 ; i &lt;= n ; i ++) for(int j = 1 ; j &lt; i ; j ++) &#123; num[++ tot] = 0; calc(a , b , i , j); if(a &gt;= 0) continue; for(int k = 1 ; k &lt;= n ; k ++) if(k == i || k == j || (abs(x[k] * x[k] * a + x[k] * b - y[k]) &lt; eps)) num[tot] += (1 &lt;&lt; (k - 1)); &#125; &#125; int dp() &#123; int stage = (1 &lt;&lt; n) - 1; memset(f , -1 , sizeof(f)); f[0] = 0; for(int i = 1 ; i &lt;= tot ; i ++) for(int j = stage ; j &gt;= 0 ; j --) if(f[j] != -1) &#123; int v = j | num[i]; if(f[v] == -1 || f[v] &gt; f[j] + 1) f[v] = f[j] + 1; &#125; return f[stage];&#125;int main() &#123;// freopen(&quot;angrybirds.in&quot;,&quot;r&quot;,stdin);// freopen(&quot;angrybirds.out&quot;,&quot;w&quot;,stdout); T = read(); while(T --) &#123; tot = 0; n = read() , m = read(); for(int i = 1 ; i &lt;= n ; i ++) scanf(&quot;%lf%lf&quot;,&amp;x[i],&amp;y[i]); init(); printf(&quot;%d\n&quot;,dp()); &#125; return 0;&#125;// a = (x1y2 - x2y1) / x1x2(x2 - x1)// b = (y1 - a * x1^2) / x1]]></content>
      <tags>
        <tag>动态规划,dp</tag>
        <tag>状压dp</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HAOI2010软件安装]]></title>
    <url>%2F2019%2F04%2F04%2FHAOI2010-%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[思路很简单: Tarjan + 树形背包code:123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687#include&lt;bits/stdc++.h&gt;using namespace std;#define random(a , b) rand() % (b - a + 1) + aconst int N = 1009;int n , m , w[N] , c[N];int read() &#123; int s = 0 , w = 1; char ch = getchar(); while(ch &lt; 48 || ch &gt; 57)&#123; if(ch == &apos;-&apos;) w = -1 ; ch = getchar();&#125; while(ch &gt;= 48 &amp;&amp; ch &lt;= 57) s = (s &lt;&lt; 1) + (s &lt;&lt; 3) + (ch ^ 48) , ch = getchar(); return s * w;&#125; struct Edge&#123;int to , nxt;&#125; e[N &lt;&lt; 1];int head[N] , tot = 0 , par[N];void addedge(int x , int y) &#123;e[++tot].to = y , e[tot].nxt = head[x] , head[x] = tot;&#125;bool ins[N];int stk[N] , dfn[N] , low[N] , bel[N] , sw[N] , sc[N];int ind = 0 , top = 0 , col;void Tarjan(int u) &#123; dfn[u] = low[u] = ++ ind; stk[++ top] = u; ins[u] = 1; for(int i = head[u] ; i != -1; i = e[i].nxt) &#123; int v = e[i].to; if(!dfn[v]) &#123; Tarjan(v); low[u] = min(low[u] , low[v]); &#125; else if(ins[v]) low[u] = min(low[u] , dfn[v]); &#125; int k; if(low[u] == dfn[u]) &#123; ++col; do &#123; k = stk[top --]; sw[col] += w[k]; sc[col] += c[k]; ins[k] = 0; bel[k] = col; &#125; while(k != u); &#125;&#125;int f[N][1009];// w是体积 , c是价值 void dfs(int u , int par) &#123; for(int i = sw[u] ; i &lt;= m ; i ++) f[u][i] = sc[u]; for(int i = head[u] ; i != -1; i = e[i].nxt) if(e[i].to != par) &#123; int v = e[i].to; dfs(v , u); for(int j = m - sw[u] ; j &gt;= 0 ; j --) for(int k = 0 ; k &lt;= j ; k ++) f[u][sw[u] + j] = max(f[u][sw[u] + j] , f[u][sw[u] + j - k] + f[v][k]); &#125;&#125;int du[N];int main() &#123; srand(time(NULL)); memset(head , -1 , sizeof(head)); n = read() , m = read(); for(int i = 1 ; i &lt;= n ; i ++) w[i] = read(); for(int i = 1 ; i &lt;= n ; i ++) c[i] = read(); for(int i = 1 ; i &lt;= n ; i ++) &#123; par[i] = read(); addedge(par[i] , i); &#125; col = n; for(int i = 1 ; i &lt;= n ; i ++) if(!dfn[i]) Tarjan(i); for(int i = 1 ; i &lt;= n ; i ++) for(int j = head[i] ; j != -1; j = e[j].nxt) if(bel[e[j].to] != bel[i]) addedge(bel[i] , bel[e[j].to]) , du[bel[e[j].to]] ++; for(int i = n + 1 ; i &lt;= col ; i ++) if(!du[i]) addedge(col + 1 , i) ; dfs(col + 1 , -1); cout &lt;&lt; f[col + 1][m] &lt;&lt; endl; return 0;&#125;]]></content>
      <tags>
        <tag>动态规划,dp</tag>
        <tag>树形dp</tag>
        <tag>Tarjan,缩点</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[八下化学]]></title>
    <url>%2F2019%2F03%2F31%2F%E5%85%AB%E4%B8%8B%E5%8C%96%E5%AD%A6%2F</url>
    <content type="text"><![CDATA[输入密码，查看文章 Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>文化课</category>
      </categories>
      <tags>
        <tag>文化课</tag>
        <tag>化学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[BZOJ 3090 podjela]]></title>
    <url>%2F2019%2F03%2F30%2FBZOJ-3090-podjela%2F</url>
    <content type="text"><![CDATA[问题描述有 N 个农民, 他们住在 N 个不同的村子里. 这 N 个村子形成一棵树.每个农民初始时获得 X 的钱.每一次操作, 一个农民可以从它自己的钱中, 取出任意数量的钱, 交给某个相邻村子的农民.对于每个农民给定一个值 v_i, 求 最少需要多少次操作, 使得每个农民最终拿到的钱 &gt;= 给定的值v_i. 输入格式第1行: 一个整数 N (1 &lt;= N &lt;= 2000)第2行: 一个整数 X (0 &lt;= X &lt;= 10000)第3行: N 个整数, 表示 v_i. 保证所有 v_i 的和 &lt;= N * X第4..N+2行: 每行两个 1..N 的数, 表示树上的一条边. 边是双向的. 输出格式第1行: 一个整数, 最少需要的操作次数 样例输入61510 20 18 16 6 161 44 54 66 25 3 样例输出5 Code1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253#include&lt;bits/stdc++.h&gt;using namespace std;const long long N = 2009 , INF = 36028797018963968;long long n , m , a[N] , size[N] , f[N][N] , g[N];struct Edge&#123;long long to , nxt;&#125; e[N &lt;&lt; 1];long long head[N] , tot = 0;void addedge(long long x , long long y) &#123;e[++tot].to = y , e[tot].nxt = head[x] , head[x] = tot;&#125;long long read() &#123; long long s = 0 ,w = 1; char ch = getchar(); while(ch &lt; 48 || ch &gt; 57) &#123;if(ch == &apos;-&apos;) w = -1; ch = getchar();&#125; while(ch &gt;= 48 &amp;&amp; ch &lt;= 57) s = (s &lt;&lt; 1) + (s &lt;&lt; 3) + (ch ^ 48) , ch = getchar(); return s * w;&#125;void dfs(long long u , long long par) &#123; size[u] = 1; f[u][0] = f[u][1] = m - a[u]; for(int i = head[u] ; i ; i = e[i].nxt) if(e[i].to != par) &#123; long long v = e[i].to; dfs(v , u); for(int j = 0 ; j &lt; size[u] ; j ++ ) g[j] = f[u][j]; for(int j = 0 ; j &lt; size[u] + size[v] ; j ++ ) f[u][j] = - INF; for(int v1 = 0 ; v1 &lt; size[u] ; v1 ++) for(int v2 = 0 ; v2 &lt; size[v] ; v2 ++) &#123; if(f[v][v2] &gt;= 0) f[u][v1 + v2] = max(f[u][v1 + v2] , g[v1]); f[u][v1 + v2 + 1] = max(f[u][v1 + v2 + 1] , f[v][v2] + g[v1]); &#125; size[u] += size[v]; &#125;&#125;int main() &#123; n = read() , m = read(); for(int i = 1 ; i &lt;= n ; i ++) a[i] = read(); for(int i = 1 ; i &lt; n ; i ++) &#123; int x = read() , y = read(); addedge(x , y) ; addedge(y , x); &#125; dfs(1 , 0); for(int i = 0 ; i &lt; n ; i ++) if(f[1][i] &gt;= 0) &#123; printf(&quot;%lld\n&quot;,i); return 0; &#125; return 0;&#125;]]></content>
      <categories>
        <category>动态规划</category>
      </categories>
      <tags>
        <tag>动态规划,dp</tag>
        <tag>树形dp</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[基础位运算]]></title>
    <url>%2F2019%2F03%2F30%2F%E5%9F%BA%E7%A1%80%E4%BD%8D%E8%BF%90%E7%AE%97%2F</url>
    <content type="text"><![CDATA[操作:1、去掉最后一位 例如：101101-&gt;101102、在最后加一个0 例如：101101-&gt;10110103、在最后面加一个1 例如：101101-&gt;10110114、把最后一位变成0 例如：101101-&gt;1011005、把最后一位变成1 例如：101100-&gt;1011016、最后一位取反 例如：101101-&gt;1011007、把右数第k位变成1 例如：101001-&gt;101101,k=38、把右数第k位变成0 例如：101101-&gt;101001,k=39、右数第k位取反 例如：101001-&gt;101101,k=310、取末三位 例如：1101101-&gt;10111、取末k位 例如：1101101-&gt;1101,k=412、取右数第k位 例如：1101101-&gt;1,k=413、把末尾k位变成1 例如：101001-&gt;101111,k=414、末k位取反 例如：101001-&gt;100110,k=415、把右边连续的1变成0 例如：100101111-&gt;10010000016、把右边起第一个0变成1 例如：100101111-&gt;10011111117、把右边起连续的0变成1 例如：110011000-&gt;11001111118、取右边连续的1 例如：100101111-&gt;111119、去掉右边起第一个1的左边 例如：100101000-&gt;1000 Code12345678910111213141516171819202122232425262728293031323334353637#include&lt;bits/stdc++.h&gt;using namespace std;inline int read() &#123; int s = 0 ,w = 1; char ch = getchar(); while(ch &lt; 48 || ch &gt; 57) &#123;if(ch == &apos;-&apos;) w = -1 ; ch = getchar();&#125; while(ch &gt;= 48 &amp;&amp; ch &lt;= 57) s = (s &lt;&lt; 1) + (s &lt;&lt; 3) + (ch ^ 48) , ch = getchar(); return s * w;&#125;int T;int main() &#123; T = read(); while(T --) &#123; int opt = read() , x = read() , k; if(opt == 1) printf(&quot;%d\n&quot; , x &gt;&gt; 1); if(opt == 2) printf(&quot;%d\n&quot; , x &lt;&lt; 1); if(opt == 3) printf(&quot;%d\n&quot; , x &lt;&lt; 1 | 1); if(opt == 4) printf(&quot;%d\n&quot; , x - (x &amp; 1) ); if(opt == 5) printf(&quot;%d\n&quot; , x | 1); if(opt == 6) printf(&quot;%d\n&quot; , x ^ 1); if(opt == 7) &#123;k = read() ; printf(&quot;%d\n&quot; , x | (1 &lt;&lt; (k - 1)));&#125; if(opt == 8) &#123;k = read() ; printf(&quot;%d\n&quot; , x &amp; (~(1 &lt;&lt; (k - 1))) );&#125; if(opt == 9) &#123;k = read() ; printf(&quot;%d\n&quot; , x ^ (1 &lt;&lt; (k - 1)) );&#125; if(opt == 10) printf(&quot;%d\n&quot; , x &amp; 7); if(opt == 11) &#123;k = read() ; printf(&quot;%d\n&quot; , x &amp; ((1 &lt;&lt; k) - 1) ); if(opt == 12) &#123;k = read() ; printf(&quot;%d\n&quot; , (x &gt;&gt; (k - 1)) &amp; 1 ); &#125; if(opt == 13) &#123;k = read() ; printf(&quot;%d\n&quot; , x | ((1 &lt;&lt; k) - 1));&#125; if(opt == 14) &#123;k = read() ; printf(&quot;%d\n&quot; , x ^ ((1 &lt;&lt; k) - 1));&#125; if(opt == 15) printf(&quot;%d\n&quot; , x &amp; (x + 1)); if(opt == 16) printf(&quot;%d\n&quot; , x | (x + 1)); if(opt == 17) printf(&quot;%d\n&quot; , x | (x - 1)); if(opt == 18) printf(&quot;%d\n&quot; , (x ^ (x + 1)) &gt;&gt; 1); if(opt == 19) printf(&quot;%d\n&quot; , x &amp; -x); &#125; return 0;&#125;]]></content>
      <categories>
        <category>技巧与优化</category>
      </categories>
      <tags>
        <tag>位运算</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[How to write a blog]]></title>
    <url>%2F2019%2F03%2F30%2Fmy-first-blog%2F</url>
    <content type="text"><![CDATA[怎么写blog？？？ First of all执行 cd到你的bloghexo new ‘my-first-blog’ 然后会在post文件夹生成md文件 然后打开就可以写blog了 Next格式为title: postName 文章页面上的显示名称date: 2013-12-02 15:30:16文章生成时间，当然可以任意修改categories: 默认分类 #分类tags: tag1 tag2 tag3文章标签，可空，多标签请用格式，注意:后面有个空格description: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面password: 密码message: 输入密码，查看文章以下是正文 Finally输入指令：hexo clean(可以不用) hexo g hexo d 还有一点本博客搭建参考材料firstsecondthird]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
</search>
